
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author user
 */
public class home extends javax.swing.JFrame {
    String Username;
    String Password;
    BufferedImage img;
    ImageIcon icon , icon2, icon3, icon4, icon5;
    Customer customer;
     boolean OneTime = true;
     boolean ComboSetUpdate = false;
    /**
     * Creates new form home
     */
     public home() {
        customer = new Customer();
        initComponents();
        setSize(1545,950);
      
        System.out.println("Object created");
        
    }
    public home(String Username, String Password) {
        customer = new Customer();
        initComponents();
        setSize(1050,650);
        System.out.println("Object created");
        this.Username = Username;
        this.Password = Password;
        welcome_sign.setText("<html>Welcome, "+this.Username+"</html>");
    }
    
   
    
    public void UpdateComboBox()
    {
         String[] JapanHotel = {"Hotel Kyoto","Hotel Wuushi","Hotel Kila","Hotel Vroom","Hotel Sushi"};
         String[] GermanHotel = {"Hotel Volvo","Hotel Volkswagen","Hotel Mila","Hotel Wehrmacht","Hotel Franksetein"};
         String[] AustralianHotel = {"Hotel Kangroo","Hotel Yeehaw","Hotel Crocodalia","Hotel Kingston", "Hotel Melbourne"};
         String[] SingaporeHotel = {"Hotel Lion", "Hotel Lim Win", "Hotel Shuba", "Hotel Wan", "Hotel Singapore"};
         String[] ThailandHotel = {"Hotel Koh Samu", "Hotel Bangkok", "Hotel Yao Naoi", "Hotel Rasananda", "Hotel Anantara"};
          String[] DefaultComboBox = {"Choose","Germany", "Singapore", "Japan", "Australia", "Thailand"};
         String DefaultHotelComboBox = "none";
           // Choose Germany Singapore Japan Australia Thailand
        OneTime = true;
        
        
        if(location_combo_box.getSelectedItem().equals("Choose") && OneTime == true)
         {
             
         
            
                hotel_combobox.addItem(DefaultHotelComboBox);
            
             OneTime = false;
         }
        if(location_combo_box.getSelectedItem().equals("Japan") && OneTime == true)
         {
             
             for(int i=0; i< 5; i++)
             {
                 hotel_combobox.addItem(JapanHotel[i]);
             }
             OneTime = false;
         }
        
        
        else if(location_combo_box.getSelectedItem().equals("Germany") && OneTime == true)
         {
           
             
             for(int i=0; i< 5; i++)
             {
                 hotel_combobox.addItem(GermanHotel[i]);
             }
             OneTime = false;
         }
         
        else  if(location_combo_box.getSelectedItem().equals("Thailand") && OneTime == true)
         {
             
             
             for(int i=0; i< 5; i++)
             {
                 hotel_combobox.addItem(ThailandHotel[i]);
             }
             OneTime = false;
         }
          
         else  if(location_combo_box.getSelectedItem().equals("Singapore") && OneTime == true)
         {
             
             
             for(int i=0; i< 5; i++)
             {
                 hotel_combobox.addItem(SingaporeHotel[i]);
             }
             OneTime = false;
         }
           
           
          else  if(location_combo_box.getSelectedItem().equals("Australia") && OneTime == true)
         {
            
             
             for(int i=0; i< 5; i++)
             {
                 hotel_combobox.addItem(AustralianHotel[i]);
             }
             OneTime = false;
         }
        
        else
          {
              // do nothing
          }
            
            
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonFlightGroup = new javax.swing.ButtonGroup();
        buttonAdultChildGroup = new javax.swing.ButtonGroup();
        location_combo_box = new javax.swing.JComboBox<>();
        accomodations_list = new javax.swing.JComboBox<>();
        submission_button = new javax.swing.JButton();
        flight_panel = new javax.swing.JPanel();
        standard_class = new javax.swing.JRadioButton();
        flight = new javax.swing.JLabel();
        first_class = new javax.swing.JRadioButton();
        economy_class = new javax.swing.JRadioButton();
        pic_panel = new javax.swing.JPanel();
        images = new javax.swing.JLabel();
        welcome_sign = new javax.swing.JLabel();
        loc_panel = new javax.swing.JPanel();
        Locations2 = new javax.swing.JLabel();
        Receipt = new javax.swing.JPanel();
        receipt_name = new javax.swing.JLabel();
        receipts_panel = new javax.swing.JScrollPane();
        receipt_display = new javax.swing.JTextArea();
        subtotal_value_panel = new javax.swing.JPanel();
        subtotal_value = new javax.swing.JLabel();
        total_value_panel = new javax.swing.JPanel();
        total_value = new javax.swing.JLabel();
        sub_total_panel = new javax.swing.JPanel();
        subtotal = new javax.swing.JLabel();
        combo_set = new javax.swing.JPanel();
        departure = new javax.swing.JLabel();
        departure_combo = new javax.swing.JComboBox<>();
        hotel = new javax.swing.JLabel();
        hotel_combobox = new javax.swing.JComboBox<>();
        priceH = new javax.swing.JLabel();
        priceH_value = new javax.swing.JLabel();
        name = new javax.swing.JLabel();
        name_value = new javax.swing.JFormattedTextField();
        age = new javax.swing.JLabel();
        age_value = new javax.swing.JFormattedTextField();
        total_panel = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        description = new javax.swing.JPanel();
        country_desc = new javax.swing.JLabel();
        adult_child_panel = new javax.swing.JPanel();
        adult = new javax.swing.JRadioButton();
        child = new javax.swing.JRadioButton();
        save_receipt = new javax.swing.JButton();
        accomodation_panel = new javax.swing.JPanel();
        Locations1 = new javax.swing.JLabel();
        reset_button = new javax.swing.JButton();
        title_panel = new javax.swing.JPanel();
        title = new javax.swing.JLabel();
        Logout_button = new javax.swing.JButton();
        background_image = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(null);

        location_combo_box.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Choose", "Germany", "Singapore", "Japan", "Australia", "Thailand" }));
        location_combo_box.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                location_combo_boxActionPerformed(evt);
            }
        });
        getContentPane().add(location_combo_box);
        location_combo_box.setBounds(160, 310, 90, 22);

        accomodations_list.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Single", "Double", "Triple" }));
        accomodations_list.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 3));
        accomodations_list.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                accomodations_listActionPerformed(evt);
            }
        });
        getContentPane().add(accomodations_list);
        accomodations_list.setBounds(470, 130, 80, 26);

        submission_button.setText("Submit");
        submission_button.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        submission_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submission_buttonActionPerformed(evt);
            }
        });
        getContentPane().add(submission_button);
        submission_button.setBounds(390, 570, 120, 19);

        flight_panel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 3));

        buttonFlightGroup.add(standard_class);
        standard_class.setText("Standard");
        standard_class.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                standard_classActionPerformed(evt);
            }
        });

        flight.setText("Flight");

        buttonFlightGroup.add(first_class);
        first_class.setText("First class ");

        buttonFlightGroup.add(economy_class);
        economy_class.setText("Economy");

        javax.swing.GroupLayout flight_panelLayout = new javax.swing.GroupLayout(flight_panel);
        flight_panel.setLayout(flight_panelLayout);
        flight_panelLayout.setHorizontalGroup(
            flight_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, flight_panelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(flight)
                .addGap(18, 18, 18)
                .addComponent(standard_class)
                .addGap(18, 18, 18)
                .addComponent(first_class)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(economy_class)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        flight_panelLayout.setVerticalGroup(
            flight_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(flight_panelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(flight_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(flight)
                    .addComponent(standard_class, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(first_class)
                    .addComponent(economy_class))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        getContentPane().add(flight_panel);
        flight_panel.setBounds(350, 170, 340, 40);

        pic_panel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 3));

        images.setBackground(new java.awt.Color(240, 240, 250));
        pic_panel.add(images);

        getContentPane().add(pic_panel);
        pic_panel.setBounds(90, 130, 220, 170);

        welcome_sign.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        welcome_sign.setText("Welcome");
        getContentPane().add(welcome_sign);
        welcome_sign.setBounds(20, 560, 90, 40);

        loc_panel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        Locations2.setText("Location");
        loc_panel.add(Locations2);

        getContentPane().add(loc_panel);
        loc_panel.setBounds(160, 100, 70, 30);

        Receipt.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 3));

        receipt_name.setText("Receipt");
        Receipt.add(receipt_name);

        getContentPane().add(Receipt);
        Receipt.setBounds(870, 100, 90, 30);

        receipt_display.setColumns(20);
        receipt_display.setRows(5);
        receipts_panel.setViewportView(receipt_display);

        getContentPane().add(receipts_panel);
        receipts_panel.setBounds(840, 160, 220, 200);

        subtotal_value.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        javax.swing.GroupLayout subtotal_value_panelLayout = new javax.swing.GroupLayout(subtotal_value_panel);
        subtotal_value_panel.setLayout(subtotal_value_panelLayout);
        subtotal_value_panelLayout.setHorizontalGroup(
            subtotal_value_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(subtotal_value_panelLayout.createSequentialGroup()
                .addGap(1, 1, 1)
                .addComponent(subtotal_value, javax.swing.GroupLayout.DEFAULT_SIZE, 146, Short.MAX_VALUE)
                .addGap(3, 3, 3))
        );
        subtotal_value_panelLayout.setVerticalGroup(
            subtotal_value_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(subtotal_value_panelLayout.createSequentialGroup()
                .addGap(3, 3, 3)
                .addComponent(subtotal_value, javax.swing.GroupLayout.DEFAULT_SIZE, 24, Short.MAX_VALUE)
                .addGap(3, 3, 3))
        );

        getContentPane().add(subtotal_value_panel);
        subtotal_value_panel.setBounds(400, 490, 150, 30);

        total_value.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        javax.swing.GroupLayout total_value_panelLayout = new javax.swing.GroupLayout(total_value_panel);
        total_value_panel.setLayout(total_value_panelLayout);
        total_value_panelLayout.setHorizontalGroup(
            total_value_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(total_value_panelLayout.createSequentialGroup()
                .addGap(2, 2, 2)
                .addComponent(total_value, javax.swing.GroupLayout.DEFAULT_SIZE, 145, Short.MAX_VALUE)
                .addGap(3, 3, 3))
        );
        total_value_panelLayout.setVerticalGroup(
            total_value_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(total_value_panelLayout.createSequentialGroup()
                .addComponent(total_value, javax.swing.GroupLayout.DEFAULT_SIZE, 28, Short.MAX_VALUE)
                .addGap(2, 2, 2))
        );

        getContentPane().add(total_value_panel);
        total_value_panel.setBounds(400, 530, 150, 30);

        sub_total_panel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 3));

        subtotal.setText("Subtotal");
        sub_total_panel.add(subtotal);

        getContentPane().add(sub_total_panel);
        sub_total_panel.setBounds(320, 490, 70, 30);

        combo_set.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 3));

        departure.setText("Departure");

        departure_combo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Choose", "KLIA ", "Melaka International Airport", "Sultan Abdul Aziz Shah Airport", "Penang International Airport", "Kuching International Airport" }));
        departure_combo.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 3));

        hotel.setText("Hotel");

        hotel_combobox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "none" }));
        hotel_combobox.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 3));
        hotel_combobox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hotel_comboboxActionPerformed(evt);
            }
        });

        priceH.setText("Price:RM");

        priceH_value.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        name.setText("Name:");

        age.setText("Age:");

        javax.swing.GroupLayout combo_setLayout = new javax.swing.GroupLayout(combo_set);
        combo_set.setLayout(combo_setLayout);
        combo_setLayout.setHorizontalGroup(
            combo_setLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(combo_setLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(combo_setLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(combo_setLayout.createSequentialGroup()
                        .addGroup(combo_setLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(hotel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(departure, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(combo_setLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(departure_combo, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(hotel_combobox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(priceH)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(priceH_value, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(combo_setLayout.createSequentialGroup()
                        .addComponent(name)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(name_value, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(age)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(age_value, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(36, Short.MAX_VALUE))
        );
        combo_setLayout.setVerticalGroup(
            combo_setLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(combo_setLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(combo_setLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(departure)
                    .addComponent(departure_combo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(combo_setLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(priceH_value, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(combo_setLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(hotel)
                        .addComponent(hotel_combobox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(priceH)))
                .addGap(18, 18, 18)
                .addGroup(combo_setLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(name)
                    .addComponent(name_value, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(age)
                    .addComponent(age_value, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(26, Short.MAX_VALUE))
        );

        getContentPane().add(combo_set);
        combo_set.setBounds(350, 280, 370, 150);

        total_panel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 3));

        jLabel2.setText("Total");
        total_panel.add(jLabel2);

        getContentPane().add(total_panel);
        total_panel.setBounds(320, 530, 70, 30);

        description.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 3));

        country_desc.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        country_desc.setVerticalAlignment(javax.swing.SwingConstants.TOP);

        javax.swing.GroupLayout descriptionLayout = new javax.swing.GroupLayout(description);
        description.setLayout(descriptionLayout);
        descriptionLayout.setHorizontalGroup(
            descriptionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(descriptionLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(country_desc, javax.swing.GroupLayout.DEFAULT_SIZE, 210, Short.MAX_VALUE)
                .addContainerGap())
        );
        descriptionLayout.setVerticalGroup(
            descriptionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(descriptionLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(country_desc, javax.swing.GroupLayout.DEFAULT_SIZE, 68, Short.MAX_VALUE)
                .addContainerGap())
        );

        getContentPane().add(description);
        description.setBounds(90, 340, 240, 100);

        adult_child_panel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 3));

        buttonAdultChildGroup.add(adult);
        adult.setText("Adult");

        buttonAdultChildGroup.add(child);
        child.setText("Child");

        javax.swing.GroupLayout adult_child_panelLayout = new javax.swing.GroupLayout(adult_child_panel);
        adult_child_panel.setLayout(adult_child_panelLayout);
        adult_child_panelLayout.setHorizontalGroup(
            adult_child_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(adult_child_panelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(adult)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(child)
                .addContainerGap(12, Short.MAX_VALUE))
        );
        adult_child_panelLayout.setVerticalGroup(
            adult_child_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, adult_child_panelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(adult_child_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(adult, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(child))
                .addContainerGap())
        );

        getContentPane().add(adult_child_panel);
        adult_child_panel.setBounds(350, 220, 140, 40);

        save_receipt.setText("Save Receipt");
        save_receipt.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        save_receipt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                save_receiptActionPerformed(evt);
            }
        });
        getContentPane().add(save_receipt);
        save_receipt.setBounds(890, 380, 120, 19);

        accomodation_panel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 3));

        Locations1.setText("Accomodation");
        accomodation_panel.add(Locations1);

        getContentPane().add(accomodation_panel);
        accomodation_panel.setBounds(350, 130, 110, 32);

        reset_button.setText("Reset");
        reset_button.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        reset_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                reset_buttonActionPerformed(evt);
            }
        });
        getContentPane().add(reset_button);
        reset_button.setBounds(540, 570, 79, 19);

        title_panel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 8));
        title_panel.setName(""); // NOI18N

        title.setFont(new java.awt.Font("Tahoma", 0, 48)); // NOI18N
        title.setText("FARISU'S TRAVEL GUIDE TRIP");
        title_panel.add(title);

        getContentPane().add(title_panel);
        title_panel.setBounds(30, 10, 960, 80);

        Logout_button.setText("Log out");
        Logout_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Logout_buttonActionPerformed(evt);
            }
        });
        getContentPane().add(Logout_button);
        Logout_button.setBounds(910, 570, 75, 25);

        background_image.setIcon(new javax.swing.ImageIcon(getClass().getResource("/HomeBack.jpg"))); // NOI18N
        background_image.setText("jLabel1");
        getContentPane().add(background_image);
        background_image.setBounds(0, 0, 1180, 640);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void location_combo_boxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_location_combo_boxActionPerformed
        
         ComboSetUpdate = false;
         
         
         if(location_combo_box.getSelectedItem().equals("Choose"))
         {  
             images.setIcon(null);
             
             country_desc.setText("");
             hotel_combobox.removeAllItems();
             UpdateComboBox();
             ComboSetUpdate = true;
             
         }
         
         if(location_combo_box.getSelectedItem().equals("Japan"))
         {   try {
            img = ImageIO.read(new File("D:/MMU programming/Java/Assignment/Online_Tourism_Project/src/japan.jpg"));
            
              } catch (IOException ex) {
                 Logger.getLogger(home.class.getName()).log(Level.SEVERE, null, ex);
             }
              icon = new ImageIcon(img);
             images.setIcon(icon);
             
             country_desc.setText("<html>Japan is a country from East Asia<br>Crime Level: Low </br><br>Trip Safety :Very Safe</br></html>");
             hotel_combobox.removeAllItems();
             UpdateComboBox();
             ComboSetUpdate = true;
             
         }
         
         
          if(location_combo_box.getSelectedItem().equals("Singapore"))
         {   try {
            img = ImageIO.read(new File("D:/MMU programming/Java/Assignment/Online_Tourism_Project/src/singapore.jpg"));
            
              } catch (IOException ex) {
                 Logger.getLogger(home.class.getName()).log(Level.SEVERE, null, ex);
             }
             icon2 = new ImageIcon(img);
             images.setIcon(icon2);
             
             country_desc.setText("<html>Singapore is a country from Southeast Asia<br>Crime Level: Low </br><br>Trip Safety :Safe</br></html>");
              hotel_combobox.removeAllItems();
             UpdateComboBox();
             ComboSetUpdate = true;
         }
          
           if(location_combo_box.getSelectedItem().equals("Australia"))
         {   try {
            img = ImageIO.read(new File("D:/MMU programming/Java/Assignment/Online_Tourism_Project/src/australia.jpg"));
            
              } catch (IOException ex) {
                 Logger.getLogger(home.class.getName()).log(Level.SEVERE, null, ex);
             }
             icon3 = new ImageIcon(img);
             images.setIcon(icon3);
             
              country_desc.setText("<html>Australia is a country from Oceania<br>Crime Level: Low </br><br>Trip Safety :Okay</br><html>");
               hotel_combobox.removeAllItems();
              UpdateComboBox();
              ComboSetUpdate = true;
         }
           
            if(location_combo_box.getSelectedItem().equals("Thailand"))
         {   try {
            img = ImageIO.read(new File("D:/MMU programming/Java/Assignment/Online_Tourism_Project/src/bangkok.jpg"));
            
              } catch (IOException ex) {
                 Logger.getLogger(home.class.getName()).log(Level.SEVERE, null, ex);
             }
             icon4 = new ImageIcon(img);
             images.setIcon(icon4);
             
             country_desc.setText("<html>Thailand is a country from Southeast Asia<br>Crime Level: Medium </br><br>Trip Safety : Concerning</br></html>");
              hotel_combobox.removeAllItems();
             
             UpdateComboBox();
             ComboSetUpdate = true;
         }
            
               if(location_combo_box.getSelectedItem().equals("Germany"))
         {   try {
            img = ImageIO.read(new File("D:/MMU programming/Java/Assignment/Online_Tourism_Project/src/berlin.jpg"));
            
              } catch (IOException ex) {
                 Logger.getLogger(home.class.getName()).log(Level.SEVERE, null, ex);
             }
             icon5 = new ImageIcon(img);
             images.setIcon(icon5);
             
             country_desc.setText("<html>Germany is a country from Europe<br>Crime Level: Low </br><br>Trip Safety :Okay</br></html>");
              hotel_combobox.removeAllItems();
             UpdateComboBox();
             ComboSetUpdate = true;
         } 
            
         
         
         
         
         
    }//GEN-LAST:event_location_combo_boxActionPerformed

    private void accomodations_listActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_accomodations_listActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_accomodations_listActionPerformed

    private void standard_classActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_standard_classActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_standard_classActionPerformed

    private void hotel_comboboxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hotel_comboboxActionPerformed
        // TODO add your handling code here:
         String[] JapanHotel = {"Hotel Kyoto","Hotel Wuushi","Hotel Kila","Hotel Vroom","Hotel Sushi"};
         String[] GermanHotel = {"Hotel Volvo","Hotel Volkswagen","Hotel Mila","Hotel Wehrmacht","Hotel Franksetein"};
         String[] AustralianHotel = {"Hotel Kangroo","Hotel Yeehaw","Hotel Crocodalia","Hotel Kingston", "Hotel Melbourne"};
         String[] SingaporeHotel = {"Hotel Lion", "Hotel Lim Win", "Hotel Shuba", "Hotel Wan", "Hotel Singapore"};
         String[] ThailandHotel = {"Hotel Koh Samu", "Hotel Bangkok", "Hotel Yao Naoi", "Hotel Rasananda", "Hotel Anantara"};
        
     if( ComboSetUpdate == true)
     {  
         
        if(hotel_combobox.getSelectedItem().equals("none"))
        {
            priceH_value.setText("");
        }
        if(hotel_combobox.getSelectedItem().equals("Hotel Kyoto"))
        {
            priceH_value.setText("5000");
        }
        
        if(hotel_combobox.getSelectedItem().equals("Hotel Wuushi"))
        {
            priceH_value.setText("3000");
        }
        
        if(hotel_combobox.getSelectedItem().equals("Hotel Kila"))
        {
            priceH_value.setText("2000");
        }
        
        if(hotel_combobox.getSelectedItem().equals("Hotel Vroom"))
        {
            priceH_value.setText("2500");
        }
        
        if(hotel_combobox.getSelectedItem().equals("Hotel Sushi"))
        {
            priceH_value.setText("2800");
        }
        
        if(hotel_combobox.getSelectedItem().equals("Hotel Volvo"))
        {
            priceH_value.setText("5000");
        }
        
         if(hotel_combobox.getSelectedItem().equals("Hotel Volkswagen"))
        {
            priceH_value.setText("7000");
        }
         
          if(hotel_combobox.getSelectedItem().equals("Hotel Mila"))
        {
            priceH_value.setText("8000");
        }
          
          
         if (hotel_combobox.getSelectedItem().equals("Hotel Wehrmacht"))
        {
            priceH_value.setText("4000");
        }
            
           if(hotel_combobox.getSelectedItem().equals("Hotel Franksetein"))
        {
            priceH_value.setText("4500");
        }
                  
          if(hotel_combobox.getSelectedItem().equals("Hotel Kangroo"))
        {
            priceH_value.setText("4500");
        }
          
          if(hotel_combobox.getSelectedItem().equals("Hotel Yeehaw"))
        {
            priceH_value.setText("5500");
        }
          if(hotel_combobox.getSelectedItem().equals("Hotel Crocodalia"))
        {
            priceH_value.setText("8800");
        }
          
         if(hotel_combobox.getSelectedItem().equals("Hotel Kingston"))
        {
            priceH_value.setText("10000");
        }
         if(hotel_combobox.getSelectedItem().equals("Hotel Melbourne"))
        {
            priceH_value.setText("12000");
        }
         
          if(hotel_combobox.getSelectedItem().equals("Hotel Lion"))
        {
            priceH_value.setText("12000");
        }
          if(hotel_combobox.getSelectedItem().equals("Hotel Lim Win"))
        {
            priceH_value.setText("5000");
        }
          
          if(hotel_combobox.getSelectedItem().equals("Hotel Shuba"))
        {
            priceH_value.setText("6000");
        }
          
           if(hotel_combobox.getSelectedItem().equals("Hotel Wan"))
        {
            priceH_value.setText("7000");
        }
           
           if(hotel_combobox.getSelectedItem().equals("Hotel Singapore"))
        {
            priceH_value.setText("8000");
        }
           
          if(hotel_combobox.getSelectedItem().equals("Hotel Koh Samu"))
        {
            priceH_value.setText("1000");
        }
          
          if(hotel_combobox.getSelectedItem().equals("Hotel Bangkok"))
        {
            priceH_value.setText("3000");
        }
          
          if(hotel_combobox.getSelectedItem().equals("Hotel Yao Naoi"))
        {
            priceH_value.setText("4400");
        }
          
          if(hotel_combobox.getSelectedItem().equals("Hotel Rasananda"))
        {
            priceH_value.setText("2200");
        }
          
            if(hotel_combobox.getSelectedItem().equals("Hotel Anantara"))
        {
            priceH_value.setText("3600");
        }
           
     }
     
     
        
    }//GEN-LAST:event_hotel_comboboxActionPerformed

    private void submission_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submission_buttonActionPerformed
        // TODO add your handling code here:
        double hotelPrices;
        double subtotal;
        double total;
        if(evt.getSource()== submission_button )
        {   
            if( ( (name_value.getText() == null && age_value.getText() == null) || (name_value.getText().trim().isEmpty() && age_value.getText().trim().isEmpty() ) ) )
            {
                 JOptionPane.showMessageDialog(null,"ERROR: One of your fields are empty! Please fill in!", "Warning", JOptionPane.WARNING_MESSAGE);
            }
            
            else if ( (child.isSelected() == false && adult.isSelected() == false)  && (first_class.isSelected() == false && economy_class.isSelected() == false && standard_class.isSelected() == false))
            {
                JOptionPane.showMessageDialog(null,"ERROR: Your radio buttons are not selected!", "Warning", JOptionPane.WARNING_MESSAGE);
               
            }
            
            else if( location_combo_box.getSelectedItem().equals("Choose") || hotel_combobox.getSelectedItem().equals("none") || departure_combo.getSelectedItem().equals("Choose"))
                    {   JOptionPane.showMessageDialog(null,"ERROR: Your radio buttons are not selected!", "Warning", JOptionPane.WARNING_MESSAGE);
                        
                    }
            
         else
            {
          
            hotelPrices = Double.parseDouble(priceH_value.getText());
            customer.setName(name_value.getText());
            customer.setAge(Integer.parseInt(age_value.getText()));
            if(adult.isSelected() && first_class.isSelected() )
            {
            customer.setInformation(location_combo_box.getSelectedItem().toString(), accomodations_list.getSelectedItem().toString(), first_class.getActionCommand(), adult.getActionCommand(), departure_combo.getSelectedItem().toString(), hotel_combobox.getSelectedItem().toString());
            customer.FillCalculation(hotelPrices,location_combo_box.getSelectedItem().toString(), accomodations_list.getSelectedItem().toString(), first_class.getActionCommand(), adult.getActionCommand(), departure_combo.getSelectedItem().toString(), hotel_combobox.getSelectedItem().toString());
            
            }
            
             if(adult.isSelected() && economy_class.isSelected() )
            {
            customer.setInformation(location_combo_box.getSelectedItem().toString(), accomodations_list.getSelectedItem().toString(), economy_class.getActionCommand(), adult.getActionCommand(), departure_combo.getSelectedItem().toString(), hotel_combobox.getSelectedItem().toString());
            customer.FillCalculation(hotelPrices,location_combo_box.getSelectedItem().toString(), accomodations_list.getSelectedItem().toString(), economy_class.getActionCommand(), adult.getActionCommand(), departure_combo.getSelectedItem().toString(), hotel_combobox.getSelectedItem().toString());
           
            }
             
              if(adult.isSelected() && standard_class.isSelected() )
            {
            customer.setInformation(location_combo_box.getSelectedItem().toString(), accomodations_list.getSelectedItem().toString(), standard_class.getActionCommand(), adult.getActionCommand(), departure_combo.getSelectedItem().toString(), hotel_combobox.getSelectedItem().toString());
            customer.FillCalculation(hotelPrices,location_combo_box.getSelectedItem().toString(), accomodations_list.getSelectedItem().toString(), standard_class.getActionCommand(), adult.getActionCommand(), departure_combo.getSelectedItem().toString(), hotel_combobox.getSelectedItem().toString());
           
            }
              
              
               if(child.isSelected() && first_class.isSelected() )
            {
            customer.setInformation(location_combo_box.getSelectedItem().toString(), accomodations_list.getSelectedItem().toString(), first_class.getActionCommand(), child.getActionCommand(), departure_combo.getSelectedItem().toString(), hotel_combobox.getSelectedItem().toString());
            customer.FillCalculation(hotelPrices,location_combo_box.getSelectedItem().toString(), accomodations_list.getSelectedItem().toString(), first_class.getActionCommand(), child.getActionCommand(), departure_combo.getSelectedItem().toString(), hotel_combobox.getSelectedItem().toString());
           
            }
               
             if(adult.isSelected() && economy_class.isSelected() )
            {
            customer.setInformation(location_combo_box.getSelectedItem().toString(), accomodations_list.getSelectedItem().toString(), economy_class.getActionCommand(), child.getActionCommand(), departure_combo.getSelectedItem().toString(), hotel_combobox.getSelectedItem().toString());
            customer.FillCalculation(hotelPrices,location_combo_box.getSelectedItem().toString(), accomodations_list.getSelectedItem().toString(), economy_class.getActionCommand(), child.getActionCommand(), departure_combo.getSelectedItem().toString(), hotel_combobox.getSelectedItem().toString());
           
            }
             
              if(adult.isSelected() && standard_class.isSelected() )
            {
            customer.setInformation(location_combo_box.getSelectedItem().toString(), accomodations_list.getSelectedItem().toString(), standard_class.getActionCommand(), child.getActionCommand(), departure_combo.getSelectedItem().toString(), hotel_combobox.getSelectedItem().toString());
            customer.FillCalculation(hotelPrices,location_combo_box.getSelectedItem().toString(), accomodations_list.getSelectedItem().toString(), standard_class.getActionCommand(), child.getActionCommand(), departure_combo.getSelectedItem().toString(), hotel_combobox.getSelectedItem().toString());
           
            }
            
            subtotal = customer.getCalculationWithoutTaxes();
            subtotal = Math.round(subtotal * 100);
            subtotal = subtotal/100;
            total = customer.getCalculationWithTaxes();
            total = Math.round(total * 100);
            total = total/100;
            subtotal_value.setText("RM"+Double.toString(subtotal));
            total_value.setText("RM"+Double.toString(total));
              
              receipt_display.setText("-------------------RECEIPT---------------");
              receipt_display.append(customer.toString()+"\n");
              
            }
        }
        
       
    }//GEN-LAST:event_submission_buttonActionPerformed

    private void reset_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_reset_buttonActionPerformed
        // TODO add your handling code here:
         String DefaultHotelComboBox = "none";
         
        if(evt.getSource() == reset_button)
        {   System.out.println("Reset button is pressed");
            
            buttonAdultChildGroup.clearSelection();
            buttonFlightGroup.clearSelection();
            departure_combo.setSelectedItem("Choose");
            accomodations_list.setSelectedItem("Single");
            location_combo_box.setSelectedItem("Choose");
            priceH_value.setText("");
            
            total_value.setText("");
            subtotal_value.setText("");
            
            country_desc.setText("");
           
         
        }
    }//GEN-LAST:event_reset_buttonActionPerformed

    private void save_receiptActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_save_receiptActionPerformed
        // TODO add your handling code here:
        JFileChooser fs =  new JFileChooser(new File("D:/MMU programming/Java/Assignment/Online_Tourism_Project/src"));
        fs.showSaveDialog(this);
        
        File f = fs.getSelectedFile();
        
        try {
            FileWriter fw = new FileWriter(f);
            
            fw.write(customer.toString());
            fw.close();
        } catch (IOException ex) {
            Logger.getLogger(home.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }//GEN-LAST:event_save_receiptActionPerformed

    private void Logout_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Logout_buttonActionPerformed
        // TODO add your handling code here:
        int a = JOptionPane.showConfirmDialog(null,"Do you want to Log out?","Select",JOptionPane.YES_NO_OPTION);
        
        if( a == 0) // If value evaluated zero then close the application
        {   setVisible(false);
            try {
                new Login().setVisible(true);
            } catch (IOException ex) {
                System.out.println("Something went wrong");
                Logger.getLogger(home.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_Logout_buttonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(home.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(home.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(home.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(home.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new home().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Locations1;
    private javax.swing.JLabel Locations2;
    private javax.swing.JButton Logout_button;
    private javax.swing.JPanel Receipt;
    private javax.swing.JPanel accomodation_panel;
    private javax.swing.JComboBox<String> accomodations_list;
    private javax.swing.JRadioButton adult;
    private javax.swing.JPanel adult_child_panel;
    private javax.swing.JLabel age;
    private javax.swing.JFormattedTextField age_value;
    private javax.swing.JLabel background_image;
    private javax.swing.ButtonGroup buttonAdultChildGroup;
    private javax.swing.ButtonGroup buttonFlightGroup;
    private javax.swing.JRadioButton child;
    private javax.swing.JPanel combo_set;
    private javax.swing.JLabel country_desc;
    private javax.swing.JLabel departure;
    private javax.swing.JComboBox<String> departure_combo;
    private javax.swing.JPanel description;
    private javax.swing.JRadioButton economy_class;
    private javax.swing.JRadioButton first_class;
    private javax.swing.JLabel flight;
    private javax.swing.JPanel flight_panel;
    private javax.swing.JLabel hotel;
    private javax.swing.JComboBox<String> hotel_combobox;
    private javax.swing.JLabel images;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel loc_panel;
    private javax.swing.JComboBox<String> location_combo_box;
    private javax.swing.JLabel name;
    private javax.swing.JFormattedTextField name_value;
    private javax.swing.JPanel pic_panel;
    private javax.swing.JLabel priceH;
    private javax.swing.JLabel priceH_value;
    private javax.swing.JTextArea receipt_display;
    private javax.swing.JLabel receipt_name;
    private javax.swing.JScrollPane receipts_panel;
    private javax.swing.JButton reset_button;
    private javax.swing.JButton save_receipt;
    private javax.swing.JRadioButton standard_class;
    private javax.swing.JPanel sub_total_panel;
    private javax.swing.JButton submission_button;
    private javax.swing.JLabel subtotal;
    private javax.swing.JLabel subtotal_value;
    private javax.swing.JPanel subtotal_value_panel;
    private javax.swing.JLabel title;
    private javax.swing.JPanel title_panel;
    private javax.swing.JPanel total_panel;
    private javax.swing.JLabel total_value;
    private javax.swing.JPanel total_value_panel;
    private javax.swing.JLabel welcome_sign;
    // End of variables declaration//GEN-END:variables
}
